{"version":3,"sources":["uni-app:///main.js","webpack:///E:/00_工作/07_uniapp/ZCT_Project/MesCloudTest/App.vue?786f","webpack:///E:/00_工作/07_uniapp/ZCT_Project/MesCloudTest/App.vue?3ba0","uni-app:///App.vue"],"names":["Vue","config","productionTip","App","mpType","app","$mount"],"mappings":"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","file":"common/main.js","sourcesContent":["import 'uni-pages';import App from './App'\r\n\r\n\r\nimport Vue from 'vue'\r\nVue.config.productionTip = false\r\nApp.mpType = 'app'\r\nconst app = new Vue({\r\n    ...App\r\n})\r\napp.$mount()","var render, staticRenderFns, recyclableRender, components\nvar renderjs\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.css?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","import mod from \"-!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../安装包/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./App.vue?vue&type=script&lang=js&\"","<script>\r\n\t\r\n\tconst util = require(\"./utils/util.js\");\r\n\tconst themeListeners = [];\r\n\t\r\n\texport default {\r\n\t  globalData: {\r\n\t    preventActive(fn) {\r\n\t      const self = this;\r\n\t\r\n\t      if (this.globalData.PageActive) {\r\n\t        this.globalData.PageActive = false;\r\n\t        if (fn) fn();\r\n\t        setTimeout(() => {\r\n\t          self.PageActive = true;\r\n\t        }, 1000); //设置该时间内重复触发只执行第一次，单位ms，按实际设置\r\n\t      } else {\r\n\t        console.log('重复点击或触发');\r\n\t      }\r\n\t    },\r\n\t\r\n\t    preventActive(fn) {\r\n\t      const self = this;\r\n\t\r\n\t      if (this.globalData.PageActive) {\r\n\t        this.globalData.PageActive = false;\r\n\t        if (fn) fn();\r\n\t        setTimeout(() => {\r\n\t          self.PageActive = true;\r\n\t        }, 1500); //设置该时间内重复触发只执行第一次，单位ms，按实际设置\r\n\t      } else {\r\n\t        console.log('重复点击或触发');\r\n\t      }\r\n\t    },\r\n\t\r\n\t    themeChanged(theme) {\r\n\t      this.globalData.theme = theme;\r\n\t      themeListeners.forEach(listener => {\r\n\t        listener(theme);\r\n\t      });\r\n\t    },\r\n\t\t\r\n\t\r\n\t    watchThemeChange(listener) {\r\n\t      if (themeListeners.indexOf(listener) < 0) {\r\n\t        themeListeners.push(listener);\r\n\t      }\r\n\t    },\r\n\t\r\n\t    unWatchThemeChange(listener) {\r\n\t      const index = themeListeners.indexOf(listener);\r\n\t\r\n\t      if (index > -1) {\r\n\t        themeListeners.splice(index, 1);\r\n\t      }\r\n\t    },\r\n\t\r\n\t    async initWatch() {\r\n\t      this.db = uniCloud.database({\r\n\t        env: this.globalData.ZCTEnvId //云环境ID \r\n\t\r\n\t      });\r\n\t      var that = this;\r\n\t      this.try(() => {\r\n\t        this.db = wx.cloud.database({\r\n\t          env: this.globalData.ZCTEnvId //云环境ID \r\n\t\r\n\t        });\r\n\t        const db = this.db;\r\n\t        const _ = db.command;\r\n\t        const watcher = db.collection('ZCTChatGroup').where(_.or([{\r\n\t          ZCTSponsorUserId: _.eq(this.globalData._id)\r\n\t        }, {\r\n\t          ZCTCommunicatorsUserId: _.eq(this.globalData._id)\r\n\t        }])).where({\r\n\t          ZCTNewestTimeTS: _.gt(this.globalData.ZCTNewestTimeTS)\r\n\t        }).orderBy('ZCTNewestTimeTS', 'desc').watch({\r\n\t          onChange: function (snapshot) {\r\n\t            if (snapshot.type === 'init') {\r\n\t              var TempWaitSumCoun = 0;\r\n\t\r\n\t              for (let index = 0; index < that.chats.length; index++) {\r\n\t                TempWaitSumCoun = TempWaitSumCoun + that.chats[index].UnreadNum;\r\n\t              }\r\n\t\r\n\t              that.WaitSumCoun = TempWaitSumCoun;\r\n\t            } else {\r\n\t              const chats = [...that.chats];\r\n\t              snapshot.docChanges.forEach(docChange => {\r\n\t                switch (docChange.dataType) {\r\n\t                  case 'update':\r\n\t                  case 'add':\r\n\t                    {\r\n\t                      docChange.doc.ZCTNewestTime = util.getTimeShortStrFromTime(util.formatDateTime(docChange.doc.ZCTNewestTime));\r\n\t\r\n\t                      if (docChange.doc.ZCTSponsorUserId != that._id) {\r\n\t                        docChange.doc.UnreadNum = docChange.doc.ZCTCommunicatorUnreadNum;\r\n\t                      } else {\r\n\t                        docChange.doc.UnreadNum = docChange.doc.ZCTSponsorUnreadNum;\r\n\t                      }\r\n\t\r\n\t                      const ind = chats.findIndex(chat => chat._id === docChange.doc._id);\r\n\t\r\n\t                      if (ind > -1) {\r\n\t                        chats.splice(ind, 1, docChange.doc);\r\n\t                      } else {\r\n\t                        chats.push(docChange.doc);\r\n\t                      }\r\n\t\r\n\t                      var TempWaitSumCoun = 0;\r\n\t\r\n\t                      for (let index = 0; index < chats.length; index++) {\r\n\t                        TempWaitSumCoun = TempWaitSumCoun + chats[index].UnreadNum;\r\n\t                      }\r\n\t\r\n\t                      that.WaitSumCoun = TempWaitSumCoun;\r\n\t                      that.chats = chats;\r\n\t\r\n\t                      if (that.chats.length > 0 && that.isShowTiTile == true) {\r\n\t                        that.isShowTiTile = false;\r\n\t                      }\r\n\t\r\n\t                      break;\r\n\t                    }\r\n\t\r\n\t                  case 'remove':\r\n\t                    {\r\n\t                      const ind = chats.findIndex(chat => chat._id === docChange.doc._id);\r\n\t\r\n\t                      if (ind > -1) {\r\n\t                        that.DeleteFromList(chats[ind]._id, chats);\r\n\t                        var TempWaitSumCoun = 0;\r\n\t\r\n\t                        if (chats.length > 0) {\r\n\t                          for (let index = 0; index < chats.length; index++) {\r\n\t                            TempWaitSumCoun = TempWaitSumCoun + chats[index].UnreadNum;\r\n\t                          }\r\n\t                        }\r\n\t\r\n\t                        if (chats.length == 0) {\r\n\t                          that.isShowTiTile = true;\r\n\t                        }\r\n\t\r\n\t                        that.WaitSumCoun = TempWaitSumCoun;\r\n\t                        that.chats = chats;\r\n\t                      }\r\n\t\r\n\t                      break;\r\n\t                    }\r\n\t                }\r\n\t              });\r\n\t            }\r\n\t          },\r\n\t          onError: function (err) {\r\n\t            console.error('the watch closed because of error', err);\r\n\t          }\r\n\t        });\r\n\t      }, '初始化监听失败');\r\n\t    },\r\n\t\r\n\t    async try(fn, title) {\r\n\t      try {\r\n\t        await fn();\r\n\t      } catch (e) {\r\n\t        console.log(e);\r\n\t      }\r\n\t    },\r\n\t\r\n\t    watchchats: function (method) {\r\n\t      //监听函数\r\n\t      var that = this;\r\n\t      var obj = this.globalData;\r\n\t      Object.defineProperty(obj, 'chats', {\r\n\t        configurable: true,\r\n\t        enumerable: true,\r\n\t        set: function (value) {\r\n\t          this._name = value;\r\n\t          method(value);\r\n\t        },\r\n\t        get: function () {\r\n\t          return this._name;\r\n\t        }\r\n\t      });\r\n\t    },\r\n\t\r\n\t    DeleteFromList(selectedID, TempList) {\r\n\t      if (TempList.length) {\r\n\t        for (var i = 0; i < TempList.length; i++) {\r\n\t          if (TempList[i]._id == selectedID) //遍历出来一个数据\r\n\t            {\r\n\t              TempList.splice(i, 1);\r\n\t              return TempList;\r\n\t            }\r\n\t        }\r\n\t      }\r\n\t\r\n\t      return TempList; //返回接收到的数组内容\r\n\t    }\r\n\t\r\n\t  },\r\n\t  onLaunch: function () {\r\n\t    //※切换云环境Id时只需切换这里，其他页面js引用globalData.ZCTEnvId\r\n\t    var TempEnvId = \"tcb-ecxw1hs9f19080-6d00j26b1957e\"; //测试云环境Id\r\n\t    //var TempEnvId =\"zctmes2021-4gbkpkah6976a0e1\";       //正式云环境Id\r\n\t\r\n\t    if (!wx.cloud) {\r\n\t      console.error('请使用 2.2.3 或以上的基础库以使用云能力');\r\n\t    } else {\r\n\t      wx.cloud.init({\r\n\t        // env 参数说明：\r\n\t        //   env 参数决定接下来小程序发起的云开发调用（wx.cloud.xxx）会默认请求到哪个云环境的资源\r\n\t        //   此处请填入环境 ID, 环境 ID 可打开云控制台查看\r\n\t        //   如不填则使用默认环境（第一个创建的环境）\r\n\t        env: TempEnvId,\r\n\t        traceUser: true\r\n\t      });\r\n\t    }\r\n\t\r\n\t    this.globalData = {\r\n\t      PMUserID: \"\",\r\n\t      PMUserName: \"\",\r\n\t      WXLogoState: false,\r\n\t      //微信登录状态 true为已登录\r\n\t      CurrentLatitude: 0,\r\n\t      //当前位置纬度\r\n\t      CurrentLongitude: 0,\r\n\t      //当前位置经度 \r\n\t      PageActive: true,\r\n\t      oldTime: \"\",\r\n\t      ZCTEnvId: TempEnvId,\r\n\t      //当前使用的云环境ID\r\n\t      isShowTiTile: true,\r\n\t      chats: [],\r\n\t      ZCTNewestTimeTS: 0,\r\n\t      WaitSumCoun: 0,\r\n\t      DataList: [],\r\n\t      PMCOIListSkip: 0,\r\n\t      //消息界面通知分页 页\r\n\t      DataListLimit: 20 //消息界面通知 每页显示数量\r\n\t\r\n\t    };\r\n\t    var that = this;\r\n\t    wx.getLocation({\r\n\t      success: function (res) {\r\n\t        that.globalData.CurrentLatitude = res.latitude;\r\n\t        that.globalData.CurrentLongitude = res.longitude;\r\n\t      }\r\n\t    });\r\n\t  },\r\n\t  methods: {\r\n\t\t  \r\n\t\t  preventActive(fn) {\r\n\t\t    const self = this;\r\n\t\t    if (this.globalData.PageActive) {\r\n\t\t      this.globalData.PageActive = false;\r\n\t\t      if (fn) fn();\r\n\t\t      setTimeout(() => {\r\n\t\t        self.PageActive = true;\r\n\t\t      }, 1500); //设置该时间内重复触发只执行第一次，单位ms，按实际设置\r\n\t\t    } else {\r\n\t\t      console.log('重复点击或触发');\r\n\t\t    }\r\n\t\t  },\r\n\t\t  \r\n\t  }\r\n\t};\r\n\t\r\n</script>\r\n<style src=\"./App.css\">\r\n\r\n</style>\n"],"sourceRoot":""}